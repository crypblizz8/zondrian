import { useEffect } from "react";

import Head from "next/head";
import styles from "../../styles/Home.module.css";
import { ConnectButton } from "@rainbow-me/rainbowkit";
import dynamic from "next/dynamic";
import MintButton from "../components/MintButton";
import CollectionGrid from "../components/CollectionGrid";
import Footer from "../components/Footer";
import { collectionTokenPreview } from "../utils/zoraApi";

const DynamicComponentWithNoSSR = dynamic(
  () => import("../components/Sketch"),
  { ssr: false }
);

export default function Home({ zoraRes, collectionMultiCall }) {
  // const testZora = wait;
  return (
    <div className={styles.container}>
      <Head>
        <title>Zondrian</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="flex justify-end p-8">
        <ConnectButton />
      </div>
      <main className={styles.main}>
        <h1 className={styles.title}>Zondrian</h1>

        <p className="my-10 mx-0 text-xl text-center">
          Inspired by Piet Mondrian + Generative Art + Zora.
        </p>

        <div className="flex justify-center items-center">
          {/* <DynamicComponentWithNoSSR /> */}
        </div>

        <CollectionGrid data={zoraRes} />

        <MintButton />
        <Footer />
      </main>
      Footer
    </div>
  );
}

export async function getStaticProps() {
  // Call an external API endpoint to get posts.
  // You can use any data fetching library
  // const zoraData = await testZoraCall(); // Has to be a getStaticProp Call.
  const zoraCollectionData = await collectionTokenPreview(); // Has to be a getStaticProp Call.
  const zoraRes = await zoraCollectionData?.tokens;

  // By returning { props: { posts } }, the Blog component
  // will receive `posts` as a prop at build time
  return {
    props: {
      // zoraRes,
      zoraRes,
    },
  };
}

// export async function getStaticPaths() {
//   return {
//     paths: [],
//     fallback: "blocking",
//   };
// }
